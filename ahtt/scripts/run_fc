# running the toy-based FC scan
# the recipe is based on the latest results (02/08/2022)
# the recipe is fully sequential, whenever jobs are submitted wait until it finishes!!

#1 list down the pairs to run on, and a few other variables
#1a default settings here are what has been found to have good job efficiency (DESY default HTC slot) for the combined fits
#1b i.e. 50 toys/job and 20 jobs per point
#1c the pair specification below here uses the grid syntax i.e. the first 'm...;w...' refers to A masses and widths, and the second H masses and widths
#1d it is also possible to directly specify the desired pairs like 'A_m1_w1,H_m2_w2;A_m3_w3,H_m4_w4;...'
pairs='m400,m1000;w2p0,w5p0;m400,m1000;w2p0,w5p0'
tag='lx'
channels='ee,em,mm,e3j,e4pj,m3j,m4pj'
years='2016pre,2016post,2017,2018'
ntoy='50'
idxs='...10'
exps='exp-b,exp-s'
systs='eff_b,eff_e,eff_m_id,eff_m_iso,eff_trigger,fake,JEC,JER,MET,QCDscale,hdamp,tmass,EWK,alphaS,PDF_PCA_0,L1,EWQCD,pileup,lumi,norm'

#2 make the datacard
./../scripts/submit_twin.py --mode 'datacard,validate' --point "${pairs}" --sushi-kfactor --lnN-under-threshold --use-pseudodata --year "${years}" --channel "${channels}" --tag "${tag}" --keep ${systs}

#3 run the LO points for the exp-b and data cases
#3a this submits N jobs based on ${idxs}, each running ${ntoy} toys
#3b indexing can either be 'i1,i2,...,iN' or 'init...final'; with init defaulting to 0 if omitted
./../scripts/submit_twin.py --mode contour --point "${pairs}" --tag "${tag}" --fc-expect "${exps}" --fc-n-toy "${ntoy}" --fc-idxs "${idxs}" #--unblind

#4 merge the toy files
./../scripts/submit_twin.py --mode merge --point "${pairs}" --tag "${tag}"

#5 compile the available statistics - the toys are deleted, but all the relevant numbers we have gotten already
./../scripts/submit_twin.py --mode 'clean,compile' --point "${pairs}" --tag "${tag}" --fc-expect "${exps}" --delete-root #--unblind

#6 only if extra toys are needed rerun #4 and #5 when done
#6a if you don't use --delete-root in #5, make sure the --fc-idxs are different!
./../scripts/submit_twin.py --mode contour --point "${pairs}" --tag "${tag}" --fc-expect "${exps}" --fc-n-toy "${ntoy}" --fc-idxs "${idxs}" --fc-mode add #--unblind

#7 if enough toys are made for each point, refine the grid
#7a always do #4 and #5 every time after #6 and #7
./../scripts/submit_twin.py --mode contour --point "${pairs}" --tag "${tag}" --fc-expect "${exps}" --fc-n-toy "${ntoy}" --fc-idxs "${idxs}" --fc-mode refine #--unblind
